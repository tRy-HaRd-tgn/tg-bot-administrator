import json
from datetime import datetime
import requests
from flask import jsonify, current_app, request
from flask_login import login_required, current_user
from loguru import logger

def test_chat_parameters(chat_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ —á–∞—Ç–µ"""
    try:
        config = current_app.config_obj
        with open(config.CHATS_FILE, 'r', encoding='utf-8') as f:
            data = json.load(f)
            chats = data.get('chats', [])
        chat_data = None
        for chat in chats:
            if chat.get('id') == chat_id:
                chat_data = chat
                break
        if not chat_data:
            return jsonify({"error": "–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"}), 404
        request_data = request.get_json()
        disable_preview = request_data.get('disable_preview', False)
        disable_notification = request_data.get('disable_notification', False)
        protect_content = request_data.get('protect_content', False)
        pin_message = request_data.get('pin_message', False)
        logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–ª—è —á–∞—Ç–∞ {chat_id}:")
        logger.info(f"   disable_preview: {disable_preview}")
        logger.info(f"   disable_notification: {disable_notification}")
        logger.info(f"   protect_content: {protect_content}")
        logger.info(f"   pin_message: {pin_message}")
        telegram_chat_id = chat_data.get('chat_id')
        token = config.BOT_TOKEN
        test_message = f"üß™ <b>–¢–µ—Å—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"
        test_message += f"üìä <b>–ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
        test_message += f"üîó –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Å—ã–ª–æ–∫: {'‚ùå –æ—Ç–∫–ª—é—á—ë–Ω' if disable_preview else '‚úÖ –≤–∫–ª—é—á—ë–Ω'}\n"
        test_message += f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'‚ùå –æ—Ç–∫–ª—é—á–µ–Ω—ã' if disable_notification else '‚úÖ –≤–∫–ª—é—á–µ–Ω—ã'}\n"
        test_message += f"üõ°Ô∏è –ó–∞—â–∏—â—ë–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: {'‚úÖ –≤–∫–ª—é—á—ë–Ω' if protect_content else '‚ùå –æ—Ç–∫–ª—é—á—ë–Ω'}\n"
        test_message += f"üìå –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ: {'‚úÖ –±—É–¥–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ' if pin_message else '‚ùå –Ω–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ'}\n\n"
        test_message += f"üîó <b>–¢–µ—Å—Ç —Å—Å—ã–ª–∫–∏:</b> https://github.com/\n\n"
        test_message += f"‚úÖ <i>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {current_user.username}</i>\n"
        test_message += f"‚è± <i>{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</i>"
        api_url = f"https://api.telegram.org/bot{token}/sendMessage"
        payload = {
            'chat_id': telegram_chat_id,
            'text': test_message,
            'parse_mode': 'HTML',
            'disable_web_page_preview': disable_preview,
            'disable_notification': disable_notification,
            'protect_content': protect_content
        }
        response = requests.post(api_url, json=payload)
        data = response.json()
        if data.get('ok'):
            message_id = data.get('result', {}).get('message_id')
            if pin_message and message_id:
                pin_url = f"https://api.telegram.org/bot{token}/pinChatMessage"
                pin_payload = {
                    'chat_id': telegram_chat_id,
                    'message_id': message_id,
                    'disable_notification': disable_notification
                }
                pin_response = requests.post(pin_url, json=pin_payload)
                pin_data = pin_response.json()
                if pin_data.get('ok'):
                    logger.info(f"üìå –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ")
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {pin_data.get('description')}")
            return jsonify({
                "success": True,
                "message": f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç '{chat_data.get('title')}'",
                "message_id": message_id,
                "applied_parameters": {
                    "disable_preview": disable_preview,
                    "disable_notification": disable_notification,
                    "protect_content": protect_content,
                    "pin_message": pin_message
                }
            })
        else:
            error_description = data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            return jsonify({
                "success": False,
                "message": f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {error_description}",
                "error_code": data.get('error_code')
            }), 400
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {e}")
        return jsonify({"error": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "detail": str(e)}), 500 