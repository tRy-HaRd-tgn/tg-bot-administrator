import asyncio
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å loguru
from loguru import logger
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ loguru
logger.remove()  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
logger.add(
    sys.stderr,
    level="DEBUG",
    format="<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>",
    colorize=True
)
logger.add(
    "logs/bot_{time:YYYY-MM-DD}.log",
    level="DEBUG",
    format="{time:YYYY-MM-DD HH:mm:ss.SSS} | {level: <8} | {name}:{function}:{line} - {message}",
    rotation="1 day",
    retention="30 days",
    compression="zip"
)

from config import Config
from bot.telegram_bot import TelegramBot
from bot.campaign_scheduler import CampaignScheduler
from web.app import create_app
from utils.ngrok_manager import NgrokManager  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º NgrokManager

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
os.makedirs("data", exist_ok=True)
os.makedirs("logs", exist_ok=True)
os.makedirs("uploads", exist_ok=True)

logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config()
logger.info("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
        logger.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞")
        bot = TelegramBot(config)
        await bot.setup()
        logger.info("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        logger.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∫–∞–º–ø–∞–Ω–∏–π")
        scheduler = CampaignScheduler(bot, config)
        await scheduler.start()
        logger.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∫–∞–º–ø–∞–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        logger.debug("–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞")
        app = create_app(bot, scheduler, config)
        logger.info("‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Ngrok –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
        ngrok_url = None
        ngrok_manager = None
        if config.NGROK_ENABLED:
            logger.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Ngrok –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
            ngrok_manager = NgrokManager(config)
            if ngrok_manager.start():
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã Ngrok –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ –ø–æ–ª—É—á–∏–ª URL
                await asyncio.sleep(2)
                ngrok_url = ngrok_manager.get_public_url()
                logger.info(f"‚úÖ Ngrok –∑–∞–ø—É—â–µ–Ω: {ngrok_url}")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É –æ –∑–∞–ø—É—Å–∫–µ (—Å URL Ngrok –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        logger.debug("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É –æ –∑–∞–ø—É—Å–∫–µ")
        await bot.notify_admin_startup(config.WEB_HOST, config.WEB_PORT, ngrok_url)
        logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        # –í–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        logger.info("üéØ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        while True:
            await asyncio.sleep(60)
            logger.debug("Heartbeat - —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è –ª–∏ URL Ngrok
            if ngrok_manager and ngrok_manager.is_running:
                current_url = ngrok_manager.get_public_url()
                if current_url != ngrok_url:
                    logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π Ngrok URL: {current_url}")
                    ngrok_url = current_url                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –∞–¥–º–∏–Ω–∞–º
                    for admin_id in config.ADMIN_IDS:
                        try:                            # –§–æ—Ä–º–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ UTC
                            from utils.time_helper import get_future_utc_time_str
                            restart_time_str = get_future_utc_time_str(hours=config.NGROK_RESTART_INTERVAL)
                            
                            await bot.bot.send_message(
                                admin_id,
                                f"üîÑ <b>Ngrok —Å—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!</b>\n\n"
                                f"üîó –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {ngrok_url}\n"
                                f"‚è±Ô∏è –°—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—Å—è –≤ <b>{restart_time_str}</b>"
                            )
                        except Exception as e:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}")
        raise
    except (KeyboardInterrupt, SystemExit):
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã...")
        
        if ngrok_manager:
            logger.debug("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Ngrok")
            ngrok_manager.stop()
            
        await scheduler.stop()
        await bot.stop()
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏–∫–ª–∞ —Å–æ–±—ã—Ç–∏–π –∏ –∑–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    try:
        logger.info("üåü –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è TG AutoPosting")
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logger.info("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
